[
{
  "Time": "2024-04-25T10:08:59.4397164-04:00",
  "Group": "Detect",
  "Message": "Searching for tablets...",
  "StackTrace": null,
  "Level": 1,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4471997-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet '10moon 1060N'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4478211-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Acepen AP 1060'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4478347-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Adesso Cybertablet K8'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4478393-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Artisul A1201'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4492208-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4566135-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4567315-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4568457-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4568882-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Artisul AP604'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4568955-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Artisul M0610 Pro'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4568994-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'FlooGoo FMA100'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4569028-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon 1060 Pro'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4569705-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.457071-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4571653-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4572521-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.457295-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon GM116HD'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4573639-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4574536-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.457546-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4576426-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4576755-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon GM156HD'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4577384-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4578324-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4579212-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4580106-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4580396-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon M106K Pro'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4581076-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4581937-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4582819-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4583665-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4584016-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon M106K'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4584058-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon M10K Pro'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4584707-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4585551-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4586427-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4587265-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4587597-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon M10K'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4587643-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon M1220'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.458843-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4589397-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4590257-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.459123-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4591543-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon M1230'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4592207-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4593063-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.459403-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4594896-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.459523-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon M6'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4595893-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4596855-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4597768-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4598746-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4599185-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon PD1161'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4599839-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4600742-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4601595-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4602586-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4602876-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon PD156 Pro'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4603507-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4604383-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4605278-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4606109-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4606399-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon PD1560'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4606547-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon PD1561'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4607204-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4608167-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4609042-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4609924-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.461021-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon PD2200'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4610256-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon S56K'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4610889-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4611736-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4612605-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4613469-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4613801-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon S620'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4614441-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4615289-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4616184-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4617017-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.461736-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon S630'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4618033-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4618944-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4619932-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4620811-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4621097-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Gaomon S830'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4621739-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.46226-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4623465-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4624285-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4624684-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Genius G-Pen 560'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.462473-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Genius i405x'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4624765-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Genius i608x'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4624825-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion 420'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4624872-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion G10T'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4624909-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion G930L'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4624984-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion GC610'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4625645-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.462664-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4627499-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4628422-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4628763-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion GT-220 V2'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4628851-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion GT-221 Pro'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4628887-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion GT-221'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4628922-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H1060P'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4629585-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.463044-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.463133-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.463216-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4632506-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H1161'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4633122-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4634137-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.463499-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4635855-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4636276-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H320M'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4636918-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4637828-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4638768-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4639774-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4640092-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H420'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4640135-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H420X'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4640786-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4641747-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.464265-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.464352-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4643897-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H430P'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4644571-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4645434-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4646325-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4647263-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4647635-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H580X'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4647676-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H610 Pro V2'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4648378-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4649367-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4650279-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4651125-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4651585-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H610 Pro V3'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4651626-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H610 Pro'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4652298-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4653171-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.465404-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4654922-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.465522-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H610X'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4655878-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.465673-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4657595-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4658501-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4658845-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H640P'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4659471-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4660352-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4661193-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4662153-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.46631-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4663953-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4664915-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4665802-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4666137-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H641P'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4666179-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H642'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4666836-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4667724-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4668722-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4669582-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.46699-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H690'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4669961-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion H950P'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4670611-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.467147-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4672343-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4673163-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4673511-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion HC16'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4674126-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4675128-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4675975-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4676833-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4677164-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion HS610'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4677783-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4678937-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.46798-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4680664-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4680966-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion HS611'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4681612-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4682618-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4683519-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4684347-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4684748-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion HS64'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4685389-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4686274-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4687106-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4688111-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4688438-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion HS95'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4689135-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4689993-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4690973-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4691816-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4692143-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas 12'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4692765-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4693659-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4694504-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4695357-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4695641-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas 13'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4696299-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4697146-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4698164-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4699091-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4699412-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas 16 (2021)'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.470003-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4701005-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4701893-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4702834-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4703125-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas 16'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4703782-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4704623-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4705512-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4706348-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4706646-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas 20'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4706693-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas 22 Plus'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4707306-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4708623-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4709643-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4710545-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4710836-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas 22'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4711604-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4712488-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4713361-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4714209-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4714625-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas 24 Plus'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4715277-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4716167-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4717012-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4718012-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4718369-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas Pro 12'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4718422-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas Pro 13 (2.5k)'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4719136-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4720148-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4721052-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4721938-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4722311-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas Pro 13'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4722973-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.472389-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4724748-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4725749-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4726113-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas Pro 16 (2.5k)'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4726749-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4727662-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4728713-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4729656-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4730547-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4731591-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4732479-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4733373-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4733672-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas Pro 16'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4734342-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4735232-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4736168-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4737043-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.473797-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4739072-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4739975-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4740886-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4741182-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas Pro 20'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4741232-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas Pro 24 (4K)'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4741949-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4742836-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4743728-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4744779-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4745084-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Kamvas Pro 24'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4745132-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion New 1060 Plus (2048)'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4745207-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion New 1060 Plus'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4745846-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4746848-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.474778-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4748925-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4749253-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Q11K V2'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4749331-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Q11K'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4749966-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4750873-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4751745-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4752763-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4753082-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Q620M'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4753747-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4754606-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4755615-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4756504-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4756838-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion Q630M'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.475689-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion RDS-160'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4757524-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4758516-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4759425-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4760398-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4760709-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion RTE-100'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4760794-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion RTM-500'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4761416-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4762306-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4763244-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw4.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4764134-04:00",
  "Group": "DeviceUnauthorizedAccessException",
  "Message": "Not permitted to open HID class device at /dev/hidraw5.",
  "StackTrace": "   at HidSharp.Platform.Linux.LinuxHidStream.DeviceHandleFromPath(String path, HidDevice hidDevice, oflag oflag)\n   at HidSharp.Platform.Linux.LinuxHidDevice.TryParseReportDescriptor(ReportDescriptor& parser, Byte[]& reportDescriptor)\n   at HidSharp.Platform.Linux.LinuxHidDevice.RequiresGetInfo()\n   at HidSharp.Platform.Linux.LinuxHidDevice.GetMaxInputReportLength()\n   at OpenTabletDriver.Devices.HidSharpBackend.HidSharpEndpoint.<>c.<get_InputReportLength>b__7_0(HidDevice d) in /build/source/OpenTabletDriver/Devices/HidSharpBackend/HidSharpEndpoint.cs:line 23\n   at OpenTabletDriver.Extensions.TryGet[TSource,TValue](TSource source, Func`2 predicate, TValue& value) in /build/source/OpenTabletDriver/Extensions.cs:line 12",
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4764437-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion WH1409 V2'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4764564-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Huion WH1409'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4764605-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'KENTING K5540'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4764641-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'LifeTec LT9570'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4764677-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Monoprice 10594'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4764749-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Monoprice MP1060-HA60'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4764784-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Parblo A609'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4764821-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Parblo A610 Pro'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4764858-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Parblo A640 V2'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4764915-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Parblo Intangbo M'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4764965-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Parblo Intangbo S'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4765036-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Parblo Ninos M'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4765086-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Parblo Ninos N4'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4765121-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Parblo Ninos N7'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4765194-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Parblo Ninos S'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4765242-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'RobotPen T9A'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.476534-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'UC-Logic 1060N'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4765376-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'UC-Logic PF1209'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4765411-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'UGEE S640'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4765482-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'UGEE U1200'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4765517-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'UGEE U1600'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.476555-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'UGTABLET M708 V2'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4765584-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'UGTABLET M708'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4765661-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK A15 Pro'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4765708-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK A15 V2'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.476574-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK A15'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4765797-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK A30 V2'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4765833-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK A30'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4765866-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK A50 V2'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.47659-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK A50'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.476596-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK S640 V2'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4765994-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK S640'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4766027-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK VK1060'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4766099-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK VK1060PRO'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4766135-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK VK430 V2'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4766168-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK VK430'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4766202-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK VK640'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4766261-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'VEIKK Viola (VO1060)'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4766296-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'ViewSonic Woodpad PF0730'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4766331-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTC-4110WL'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4766364-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTC-6110WL'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4766424-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTE-430'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4766471-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTE-440'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4766552-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTE-450'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4766587-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTE-460'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4766706-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTE-630'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4766752-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTE-640'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4766798-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTE-650'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4766854-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTE-660'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4766888-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTF-430'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4766924-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTH-301'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4767012-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTH-460'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4767073-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTH-461'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4767169-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTH-470'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4767241-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTH-480'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4767289-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTH-490'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4767337-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTH-661'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4767471-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTH-670'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4767542-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTH-680'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4767592-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTH-690'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4767664-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTL-4100'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4767714-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTL-4100WL'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.476786-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTL-460'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4767933-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTL-470'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4768015-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTL-471'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4768119-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTL-472'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.476817-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTL-480'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4768245-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTL-490'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4768292-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTL-6100'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4768327-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTL-6100WL'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4768398-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTL-671'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4768441-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTL-672'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4768549-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTL-680'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4768597-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom CTL-690'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4768669-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom DTC-133'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4768717-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom DTH-1320'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.476881-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom Cintiq 13HD (DTK-1300)'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4768843-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom Cintiq 16 (DTK1660)'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4768892-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom Cintiq 12WX (DTZ-1200W)'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4768948-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom ET-0405-U'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4768994-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom ET-0405A-U'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.476904-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom FT-0405-U'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4769109-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom GD-0405-U'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4769154-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom GD-0608-U'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.476923-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom GD-0912-U'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4769276-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom GD-1212-U'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4769345-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom GD-1218-U'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4769391-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom MTE-450'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4769506-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTH-450'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4769556-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTH-451'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.476963-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTH-460'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4769679-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTH-650'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4769727-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTH-651'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4769805-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTH-660'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4769851-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTH-850'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4769923-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTH-851'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.476997-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTH-860'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4770039-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTK-1240'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4770084-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTK-440'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4770155-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTK-450'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4770202-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTK-540WL'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4770272-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTK-640'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4770318-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTK-650'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4770388-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTK-840'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4770434-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTU-600U'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.477047-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTZ-1230'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.477054-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTZ-1231W'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4770584-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTZ-430'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4770656-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTZ-431W'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4770701-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTZ-630'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4770809-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTZ-631W'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4770858-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom PTZ-930'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4770903-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom XD-0405-U'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4770974-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom XD-0608-U'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4771023-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom XD-0912-U'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4771095-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom XD-1212-U'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4771144-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Wacom XD-1218-U'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4771213-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'Waltop Slim Tablet 5.8\"'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4771247-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XenceLabs Pen Tablet Medium'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.477128-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XenceLabs Pen Tablet Small'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4771337-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XENX P1-640'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4771371-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XENX P3-1060'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4771404-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XENX X1-640'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4771437-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Artist 10 (2nd Gen)'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4771526-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Artist 12 (2nd Gen)'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.477156-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Artist 12 Pro'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4771598-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Artist 12'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4771663-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Artist 13 (2nd Gen)'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4771697-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Artist 13.3 Pro'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4771732-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Artist 13.3'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4771772-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Artist 15.6 Pro'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.477184-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Artist 15.6'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4771886-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Artist 16 (2nd Gen)'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.477199-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Artist 16 Pro'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4772047-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Artist 22HD'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4772082-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Artist Pro 16TP'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.477213-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen CT1060'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4772227-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen CT430'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4772274-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen CT640'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4772346-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Deco 01 V2 (variant 2)'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4772392-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Deco 01 V2'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4772444-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Deco 01'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4772511-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Deco 02'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4772546-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Deco 03'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4772582-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Deco L'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4772642-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Deco M'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4772677-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Deco mini4'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4772713-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Deco mini7'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4772821-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Deco Pro Medium'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4772855-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Deco Pro Small'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4772891-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Deco Pro SW'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4772997-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Innovator 16'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4773032-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star 03'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4773116-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star 05 V3'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.477315-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star 06'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4773186-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star 06C'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4773243-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star G430'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4773295-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star G430S V2'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4773331-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star G430S'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4773391-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star G540 Pro'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4773429-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star G540'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4773462-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star G640 V2'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4773496-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star G640'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4773555-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star G640S'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4773617-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star G960'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4773711-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star G960S Plus'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.477375-04:00",
  "Group": "Detect",
  "Message": "Searching for tablet 'XP-Pen Star G960S'",
  "StackTrace": null,
  "Level": 0,
  "Notification": false
},
{
  "Time": "2024-04-25T10:08:59.4779337-04:00",
  "Group": "Detect",
  "Message": "No tablets were detected.",
  "StackTrace": null,
  "Level": 1,
  "Notification": false
},
